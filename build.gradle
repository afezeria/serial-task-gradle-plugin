plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


def functionalTest = sourceSets.create('functionalTest')
def functionalTestTask = tasks.register('functionalTest', Test) {
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

tasks.named("check") {
    dependsOn functionalTestTask
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'com.github.afezeria.serial-task'
            implementationClass = 'com.github.afezeria.serialtask.SerialTaskPlugin'
        }
    }
    testSourceSets(sourceSets.functionalTest)
}

dependencies {
    functionalTestImplementation('org.junit.jupiter:junit-jupiter-api:5.8.1')
    functionalTestRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.1')

    testImplementation gradleTestKit()
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

//project('suba'){
//
//    task a {
//
//        println "====$project.name$name start ${LocalDateTime.now()}"
//        Thread.sleep(5000)
//        println "====$project.name$name end   ${LocalDateTime.now()}"
//    }
//    task b {
//        println "====$project.name$name start ${LocalDateTime.now()}"
//        Thread.sleep(5000)
//        println "====$project.name$name end   ${LocalDateTime.now()}"
//    }
//    task c {
//        dependsOn(a, b)
//    }
//}
//
//project('subb'){
//
//    task a {
//
//        println "====$project.name$name start ${LocalDateTime.now()}"
//        Thread.sleep(5000)
//        println "====$project.name$name end   ${LocalDateTime.now()}"
//    }
//    task b {
//        println "====$project.name$name start ${LocalDateTime.now()}"
//        Thread.sleep(5000)
//        println "====$project.name$name end   ${LocalDateTime.now()}"
//    }
//    task c {
//        dependsOn(b, a)
//    }
//}

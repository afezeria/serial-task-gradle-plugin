plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.18.0'
}

group 'io.github.afezeria'
version '1.0'

repositories {
    mavenCentral()
}


def functionalTest = sourceSets.create('functionalTest')
def functionalTestTask = tasks.register('functionalTest', Test) {
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

tasks.named("check") {
    dependsOn functionalTestTask
}

dependencies {
    functionalTestImplementation('org.junit.jupiter:junit-jupiter-api:5.8.1')
    functionalTestRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.1')

    testImplementation gradleTestKit()
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

pluginBundle {
    website = 'https://github.com/afezeria/serial-task'
    vcsUrl = 'https://github.com/afezeria/serial-task.git'
    tags = ['example', 'template']
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'io.github.afezeria.serial-task'
            displayName = 'serial task plugin'
            description = 'Make parallel tasks execute serially'
            implementationClass = 'io.github.afezeria.serialtask.SerialTaskPlugin'
        }
    }
    testSourceSets(sourceSets.functionalTest)
}
